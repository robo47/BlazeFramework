<?php

namespace blaze\ds;

require_once 'D:/xampp/htdocs/BlazeFrameworkServer/src/blaze/lang/Reflectable.php';
require_once 'D:/xampp/htdocs/BlazeFrameworkServer/src/blaze/lang/Object.php';
require_once 'D:/xampp/htdocs/BlazeFrameworkServer/src/blaze/lang/ClassLoader.php';
spl_autoload_register('blaze\lang\ClassLoader::autoLoad');
require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../../src/blaze/ds/DataSourceManager.php';

/**
 * Test class for the whole ds Package!
 * Generated by PHPUnit on 2010-08-09 at 19:15:34.
 */
class DataSourceManagerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var DataSourceManager
     */
    protected $dsm = null;
    /**
     * @var bdsc
     */
    protected $bdsc = array();
    /**
     * @var DataSource
     */
    protected $ds = array();
    /**
     * @var Connection
     */
    protected $con = array();

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        //bdsc:<driver-name>://<Host>[:Port][/DB][?UID=User][&PWD=Password][&Option=Value]..
        $this->bdsc[0] = 'bdsc:pdomysql://localhost:3306/dstest';
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {

    }

    /**
     * Begin Test DataSourceManager
     */
    public function testGetInstance() {
        // Remove the following lines when you implement this test.
        $this->dsm = DataSourceManager::getInstance();
        $this->assertNotNull($this->dsm);
    }

    public function testGetDataSource() {
        // Remove the following lines when you implement this test.7
        $this->dsm = DataSourceManager::getInstance();
        for ($i = 0; i < (count($this->bdsc) - 1); $i++) {
            $this->ds[$i] = $this->dsm->getDataSource($this->bdsc[$i], 'root');
            $this->assertNotNull($this->ds[$i]);
        }
    }

    /**
     * End   Test DataSourceManager
     * Begin Test DataSource
     */
    public function testGetConnection() {
        for ($i = 0; i < (count($this->bdsc) - 1); $i++) {
            $this->con[$i] = $this->ds[$i]->getConnection();
            $this->assertNotNull($this->con[$i]);
        }
    }

    public function testGetDataSourcefromDataSource(){
        for ($i = 0; i < (count($this->bdsc) - 1); $i++) {
           $this->assertNotNull(DataSource::getDataSource('localhost', '3306', 'dstest'));
           $this->assertNotNull(DataSource::getDataSource('localhost', '3306', 'dstest','root'));
        }
    }

}
?>
