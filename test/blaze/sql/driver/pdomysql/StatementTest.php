<?php
namespace blaze\lang;

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__).'/../../../../../src/blaze/lang/Object.php';
require_once dirname(__FILE__).'/../../../../../src/blaze/lang/ClassLoader.php';
spl_autoload_register('blaze\lang\ClassLoader::autoLoad');

/**
 * Test class for Object.
 * Generated by PHPUnit on 2010-06-17 at 22:30:17.
 */
class StatementTest extends \PHPUnit_Framework_TestCase {
    /**
     * @var Object
     */
    protected $con;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $dsm = \blaze\ds\DataSourceManager::getInstance();
        $ds = $dsm->getDataSource('bdsc:pdomysql://localhost/mydb?uid=root');
        $this->con = $ds->getConnection();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }


    /**
     * 
     */
    public function testCreateStatement() {
        $stmt = $this->con->createStatement();
        $this->assertNotNull($stmt);
        $stmt->close();
    }

    public function testBatch(){
        $stmt = $this->con->createStatement();
        $stmt->addBatch('INSERT INTO user(user_id,user_name,user_email,user_password,user_added,user_last_login,user_available,user_available_from,user_available_to,user_person_pers_id,user_menue_menu_id)
                            VALUES(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,NULL);');
        $stmt->addBatch('INSERT INTO user(user_id,user_name,user_email,user_password,user_added,user_last_login,user_available,user_available_from,user_available_to,user_person_pers_id,user_menue_menu_id)
                            VALUES(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,NULL);');
        $stmt->executeBatch();
        $this->assertNull($stmt->getWarnings());
    }

    public function testBlob(){
        $stmt = $this->con->createStatement();
        $stmt->execute('SELECT * FROM test');
        $this->assertTrue($stmt->getResultSet()->next());
        $this->assertNotNull($stmt->getResultSet()->getDecimal(0));
        $sb = new \blaze\lang\StringBuffer();
        $this->assertNotNull($stmt->getResultSet()->getBlob(5)->getInputStream()->read($sb));
    }
}
?>
